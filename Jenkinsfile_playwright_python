@Library("thor-shared-pipelines") _
def NODE_LABEL = 'generic'
def ENVIRONMENT = 'STAGE'
def WORKSPACE_DIR = '/var/jenkins/postman-on-jenkins-py'

pipeline {
  agent {
    node {
      label NODE_LABEL
      customWorkspace WORKSPACE_DIR
    }
  }

  options {
    ansiColor('xterm')
  }
  parameters {
    string(name: 'BRANCH', defaultValue: 'main', description: 'Enter the branch name to test.')
  }

  stages {
    stage('Clone repository') {
      steps {
        sh "git checkout ${params.BRANCH}"
      }
    }

    stage('Set up Python & Install dependencies') {
      steps {
        sh 'python3 --version'
        sh 'python3 -m venv venv'
        sh '. venv/bin/activate && pip install --upgrade pip'
        sh '. venv/bin/activate && pip install -r requirements.txt'
        sh '. venv/bin/activate && python -m playwright install --with-deps'
      }
    }

    stage('Run Playwright Python Tests') {
      steps {
        sh '. venv/bin/activate && pytest --maxfail=1 --disable-warnings --junitxml=playwright-python-results.xml test_postman_playwright.py'
      }
    }

    stage('Archive Playwright Python Results') {
      steps {
        junit 'playwright-python-results.xml'
      }
    }
  }

  post {
    always {
      echo 'Job finished'
      deleteDir()
    }
    success {
      echo 'Python Playwright tests succeeded.'
    }
    failure {
      echo 'Python Playwright tests failed.'
    }
    aborted {
      echo 'Python Playwright tests aborted.'
    }
  }
}
